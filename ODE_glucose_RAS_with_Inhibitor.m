%% Author: Minu Pilvankar
%%This code solves the podocyte RAS ODEs generating change of peptide
%%concentration with time. You can keep glucose level constant or make it a
%%function of time as well. The code uses the parameters generated from
%%Approach 3 (param_estimation_0_5.m - scenario 4).
function ODE_glucose_RAS_with_Inhibitor(peptide,p1) 
close all
%% Load the non-sensitive parameters generated by NG

load('NGvalues','NGvalues');
c_nep = NGvalues(4);
c_ace2 = NGvalues(5);
c_apa = NGvalues(6);
c_at2 = NGvalues(8);


% Coefficients and Half life parameters from literature
hAGT = log(2)/(10*3600);
hANGI = log(2)/(0.62);
hANGII = log(2)/(18);
hANG1_7 = log(2)/(30*60);
hANG1_9 = log(2)/(24*60);
hANGIII = log(2)/(0.5*60);
hAT1 = log(2)/(1.5*60);
hAT2 = log(2)/(1.5*60);
Km = 1250;

% Define the coefficients glucose-dependency



%initial values
AGT0 = 17030e3;
ANGI0 = 270;
ANGII0 = 21;
ANG1_70 = 120;
ANG1_90 = 60;
ANGIII0 = 11;
AT10 = 45;
AT20 = 19;
% Define the ODEs
function dpeptide_dt = ODEs_peptide(t, peptide,p1)
 %peptide(1) = AGT
 %peptide(2) = ANGI
 %peptide(3) = ANGII
 %peptide(4) = ANG1_7
 %peptide(5) = ANG1_9
 %peptide(6) = ANGIII
 %peptide(7) = AT1
 %peptide(8) = AT2

% Run this file to generate the coefficients estimated from
% param_esimation_fmincon.m
% For coefficients from approach 1, use load('coefficientsA1','coefficients');
% For coefficients from approach 1, use load('coefficientsA3','coefficients');
load('coefficientsA3','coefficients');

% UNCOMMENT THE LINE FOR ONLY OF THE GLU EQUATIONS FOR NORMAL OR DIABETIC SUBJECT AS REQUIRED.
% DOES NOT WORK FOR BOTH GLU EQUATIONS AT A TIME
%% For normal subject
% for yy = [1,2]
%  subject = yy;
%  if subject == 1
%GLU = 4.44*exp(-0.0001*t)*cos(0.0006*t);%5mM if glucose(NG state)

%% For diabetic subject
%  elseif subject == 2
% GLU = CurvefitGlucoseDynamics;
% GLU = char(GLU)
% newGLU = (strrep(GLU,'x','t'))
%for t = 1:500:8640
 GLU = polyval(p1,t);%(6110268777741377*t)/576460752303423488 - (7109455850996287*t^2)/590295810358705651712 + (3594468523471443*t^3)/604462909807314587353088 - (2077368560687165*t^4)/1237940039285380274899124224 + (3123276088440533*t^5)/10141204801825835211973625643008 - (814981950422715*t^6)/20769187434139310514121985316880384 + (153810942215373*t^7)/42535295865117307932921825928971026432 - (5536073590476563*t^8)/22300745198530623141535718272648361505980416 + (592833687200661*t^9)/45671926166590716193865151022383844364247891968 - (1572814392054731*t^10)/2993155353253689176481146537402947624255349848014848 + (1633919547701611*t^11)/98079714615416886934934209737619787751599303819750539264 - (5354886975988173*t^12)/12855504354071922204335696738729300820177623950262342682411008 + (3470317976656845*t^13)/421249166674228746791672110734681729275580381602196445017243910144 - (1776354383183119*t^14)/13803492693581127574869511724554050904902217944340773110325048447598592 + (5709310431846423*t^15)/3618502788666131106986593281521497120414687020801267626233049500247285301248 - (3556154231214549*t^16)/237142198758023568227473377297792835283496928595231875152809132048206089502588928 + (3362645304441599*t^17)/31082702275611665134711390509176302506278509424834232340028998555822468563283335970816 - (4663261069309343*t^18)/8148143905337944345073782753637512644205873574663745002544561797417525199053346824733589504 + (8941294097660471*t^19)/4271974071841820164790043412339104229205409044713305539894083215644439451561281100045924173873152 - (5293713571587875*t^20)/1119872371088902105278721140284222139060822748617324767449994550481895935590080472690438746635803557888 + (5832535715210673*t^21)/1174271291386916613944740298394668513687841274454159935353645485766104512557304221731849499192384351515967488 + 8928796808884605/1125899906842624
%GLU = 4.4003*exp(-0.0001*t)*cos(0.0004*t);
%end
% 

%% Coefficients
kAGT = coefficients(1);
c_ACEB = coefficients(2);
c_at1B = coefficients(3);
Vmb= coefficients(4);
c_ACEA = coefficients(5);
c_at1A = coefficients(6);
Vma = coefficients(7);
Vm = Vma*GLU+Vmb;
c_ACE = c_ACEA*GLU + c_ACEB;
c_at1 = c_at1A*GLU + c_at1B;
%% Differential equations
dpeptide_dt = zeros(8,1);
dpeptide_dt(1) = kAGT-(Vm+hAGT)*peptide(1); % dAGT/dt
dpeptide_dt(2) = (Vm*peptide(1))-((c_ACE + c_nep + c_ace2 + hANGI))*peptide(2); %dANGI/dt
dpeptide_dt(3) = (c_ACE)*peptide(2)-(c_ace2 + c_apa + c_at1 + c_at2 + hANGII)*peptide(3); %dANGII/dt
dpeptide_dt(4) = c_nep*peptide(2)+c_ace2*peptide(3)-hANG1_7*peptide(4); %dANG1_7/dt
dpeptide_dt(5) = c_ace2*peptide(2)-hANG1_9*peptide(5); %dANG1_9/dt
dpeptide_dt(6) = c_apa*peptide(3)-hANGIII*peptide(6); %dANGIII/dt
dpeptide_dt(7) = c_at1*peptide(3)-hAT1*peptide(7); %dAT1/dt 
dpeptide_dt(8)= c_at2*peptide(3)-hAT2*peptide(8); %dAT2/dt


%% Calling the solver to solve the system of ODEs

end
% Volume varying from 0 to 1 litre with an increment of 0.01
tspan = 0:100:86400;
% Initial values based on Fa0, Fb0, Fc0, and T0
peptide0 = [AGT0 ANGI0 ANGII0 ANG1_70 ANG1_90 ANGIII0 AT10 AT20];
% Using ode45 to solve the system of ODEs described in the function ODE_CA3
OPTIONS = odeset('RelTol',1e-3,'AbsTol',1e-3);
[t,peptide] = ode45(@(t,peptide) ODEs_peptide(t,peptide,p1),tspan,peptide0,OPTIONS);

ANG_II = peptide(:,3);
ANG_I = peptide(:,2);
% save('ANG_II','ANG_II');
% save('ANG_I','ANG_I');

size(ANG_II)
%Plot peptide concentrations vs Time
% figure(1)
% plot(t,peptide(:,2),'d-',t,peptide(:,3),'s-',t,peptide(:,4),'*-',t,peptide(:,5)...
%     ,'o-',t,peptide(:,6),'d-',t,peptide(:,7),'s-',t,peptide(:,8),'o-','LineWidth',2,'MarkerSize',2);
% %axis([0 1000 0 Inf])
% xlabel('t(seconds)');
% ylabel('Concentration(mol/L)');
% legend('ANGI','ANGII','ANG1-7','ANG1-9','ANGIII','AT1','AT2','Location','Northeast');
thours = t/3600 ;
figure(2)
plot(thours,peptide(:,1),'o-','LineWidth',4);
axis([0 Inf 0 Inf])
xlabel('t(seconds)');
ylabel('Concentration(mol/L)');
legend('AGT','Location','Northeast');

figure(3)
hold on
plot(thours,peptide(:,3),'o-','LineWidth',2,'MarkerSize',2); 
%axis([0 1000 0 Inf])
xlabel('t(hours)');
ylabel('ANG II Concentration(mol/L)');
hold off
end
%legend('ANGI','ANGII','ANG1-7','ANG1-9','ANGIII','AT1','AT2','Location','Northeast');


% 

